<?xml version="1.0" encoding="UTF-8" ?>
<!-- 
	1) 어떤 사용자 정의 태그를 사용할 것 인지 dtd 잡아주기
	* DTD란?
	: document Type Definition
 -->
<!DOCTYPE configuration
  PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
  
<!-- 2) configuration: Mybatis 설정값을 작성하는 공간 --> 
<configuration>
	<!-- typeAliases : 내가 사용할 객체들의 별칭을 지정할 수 있는 공간 -->
	<typeAliases>
		<typeAlias type="com.smhrd.model.MemberVO" alias="mvo"/>
	</typeAliases>

	<!-- 3) environments: DB들을 기술하는 공간-->
  <environments default="development">
  <!-- 4) environment: DB 1개를 기술하는 공간 -->
    <environment id="development">
    <!-- 
    	5) transactionManager : comit과 rollback 주체 대상 결정
    	5-1) type = "JDBC" >> 내가 commit, rollback 결정
    	5-2) type = "MANAGED" >> 외부 컨테이너에게 commit, rollback 결정
     -->
      <transactionManager type="JDBC"/>
      <!-- 
      	6) dataSource : DB 환경을 설정하는 공간 
      	6-1) type = "POOLED" >> DBCP 기술을 쓰겠다.
      		: Data Base Connection Pool
      		>> Connection 객체를 미리 생성(한정적)하고, 요청이 들어올때마다 빌려쓰는 방식
      	6-2) type = "UNPOOLED" >> 요청이 들어올 때 마다 Connection 객체 생성
      		-->
      <dataSource type="POOLED">
        <property name="driver" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/bigdata"/>
        <property name="username" value="root"/>
        <property name="password" value="12345"/>
      </dataSource>
    </environment>
  </environments>
  
  <!-- 7) mappers : mapper 파일들을 기술하는 공간 -->
  <mappers>
  <!-- 
  	8) mapper : sql 구문을 가지고 있는 파일
  	mapper 파일이 추가될 때 마다, 수정이 필요함 
   -->
    <mapper resource="com/smhrd/database/MemberMapper.xml"/>
  </mappers>
</configuration>