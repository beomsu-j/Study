package com.smhrd.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.smhrd.db.BoardMapper;
import com.smhrd.model.BoardVO;
import com.smhrd.model.SearchCriteria;

@Controller // 기능이 정의되어 있음
public class BoardController {

	@Autowired
	private BoardMapper mapper;
	
	
	// 자동완성 기능
	@RequestMapping("/autocomplete")
	@ResponseBody
	public List<BoardVO> autocomplete(SearchCriteria criteria){
		// 리턴 타입이나 매개변수의 자료형은 자유롭게 설정
		// -> 내가 꺼내오기 편한 자료형으로 지정하는것이 좋다
		List<BoardVO> result=mapper.autocomplete(criteria);
		
		return result;
	}
	
	
	
	
	
	
	
	// 비동기 통신으로 검색하는 기능
	@RequestMapping("/search")
	@ResponseBody  // -> 해당하는 메소드는 화면을 이동시키는 메소드가 아니라, 결과값을 화면에 출력해주는 메소드 
				   // -> 화면에서 띄울수 있게 되서
	public List<BoardVO> search(SearchCriteria criteria) {
		List<BoardVO> list = mapper.search(criteria);
		return list; // 리턴 된 값이 화면에 출력
		// 현재 list에는 주소값이 담겨져 있다. 우리가 비동기 통신으로 보내줘야하는 데이터는 json 구조이다
		// 주소값 -> 변환 -> json
		// 변환을 spring 에서 자동으로 진행 (변환용 라이브러리가 하나 필요)
	}
	
	
	
	
	// 글 삭제 기능
	@GetMapping("/boardDelete/{idx}")
	public String boardDelete(@PathVariable("idx") int idx) {

		mapper.boardDelete(idx);

		return "redirect:/";
	}

	// 글 상세조회 기능
	@GetMapping("/boardContent/{idx}")
	public String boardContent(@PathVariable("idx") int idx, Model model) {

		BoardVO result = mapper.boardContent(idx);

		model.addAttribute("board", result);

		return "content";
	}

	// 글쓰기 기능을 하는 메소드 생성
	@PostMapping("/register")
	public String register(BoardVO vo) {

		mapper.register(vo);

		return "redirect:/";

	}

	@GetMapping("/register")
	// 글쓰기 페이지로 이동하는 메소드
	public String register() {
		return "register";
	}

	@RequestMapping("/")
	public String board(Model model) {

		List<BoardVO> list = mapper.boardList();

		model.addAttribute("list", list);

		return "board";

	}

}
